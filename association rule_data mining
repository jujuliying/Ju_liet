import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(font_scale=1.2)
from apriori_python import apriori

file = 'https://raw.githubusercontent.com/gnapoles/data-mining-course/main/credit.csv'
data = pd.read_csv(file)

def plot_heatmap(data, groupby_col, ax):
    cf_comp = data.groupby([groupby_col, 'class']).size().unstack(fill_value=0)
    ax = sns.heatmap(cf_comp, annot=True, cmap='coolwarm', ax=ax, fmt='d')
    ax.set_xticklabels(["Bad", "Good"])
    ax.set_yticklabels(["Female" if groupby_col == "gender" else "Adult" if groupby_col == "age" else "Foreign", "Male" if groupby_col == "gender" else "Young" if groupby_col == "age" else "Native"])
    ax.set_xlabel("Credit Class")
    ax.set_ylabel("Group")

fig, axes = plt.subplots(1, 3, figsize=(18, 5))
groupby_cols = ['gender', 'age', 'foreign_worker']

for i, groupby_col in enumerate(groupby_cols):
    plot_heatmap(data, groupby_col, axes[i])

plt.tight_layout()
plt.show()

def print_selected_rules(rules, target_class=None, keyword=None):
    rule_number = 1
    for i, rule in enumerate(rules):
        antecedent, consequent, confidence = rule

        # Check if the rule's consequent matches the target_class
        if len(consequent) == 1 and (target_class is None or target_class in consequent):
            # Check if the keyword (if provided) is in the rule's antecedent
            if keyword is None or keyword in antecedent:
                print(f"Rule {rule_number}: {antecedent} â†’ {consequent}")
                print(f"\tConfidence = {round(confidence, 2)}")
                rule_number += 1


print_selected_rules(rules, target_class="good_credit_risk")

